@page "/auth/login"
@using Client.Services.AuthenticateServices
@using Dtos;
@inject AuthService _authService;
@inject MessageService _message;

<Card Bordered="false" Title=@("Card title") Style="width: 300px"> 
    <Body>
        <Form Model="@model"
          OnFinish="OnFinish"
          LabelColSpan="8"
          WrapperColSpan="16">
            <FormItem Label="Email">
                <Input @bind-Value="@context.Email" />
            </FormItem>
            <FormItem Label="Password">
                <InputPassword @bind-Value="@context.Password" />
            </FormItem>

            <FormItem WrapperColOffset="8" WrapperColSpan="16">
                <Button Type="@AntDesign.ButtonType.Primary" HtmlType="submit">
                    Submit
                </Button>
            </FormItem>
        </Form>
    </Body>
</Card>
@code {
    public UserDto model = new UserDto();

    protected override void OnInitialized()
    {
        var message = $"Initialized at {DateTime.Now}";
        Console.WriteLine(message);
    }

    private async Task OnFinish()
    {
        try
        {
            Console.WriteLine("Login");
            await _message.Loading("logging you in....");
            var result = await _authService.Login(model);

            if(result.Code == Infrastructure.Enums.ApiResponseCode.Success)
            {
                await _message.Success("login successfully!", 2);
            }
            else
            {
                await _message.Error($"login error: {result.Message}", 2);
            }

        }catch(Exception e)
        {
            await _message.Error($"login error: {e.Message}", 2);
            Console.WriteLine(e.Message);
        }
    }
}
