@page "/auth/login"
@using Client.Services.AuthenticateServices
@using Dtos;
@inject IAuthService _authService;
@inject MessageService _message;
<div id="login">
    <Card Bordered="true" Title=@("Đăng Nhập") Style="width: 350px" Id="login-panel"> 
        <Body>
            <Form Model="@model"
            OnFinish="OnFinish"
            ValidateMode="@FormValidateMode.Rules"
            WrapperColSpan="24">
                <FormItem Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true, Message="Bạn cần phải nhập Email"} })>
                    <Input @bind-Value="@context.Email" Placeholder="Nhập Email" />
                </FormItem>
                <FormItem Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true, Message="Bạn cần phải nhập mật khẩu"} })>
                    <InputPassword @bind-Value="@context.Password" Placeholder="Nhập mật Khẩu"/>
                </FormItem>

                <FormItem WrapperColSpan="24">
                    <Button Type="@AntDesign.ButtonType.Primary" HtmlType="submit">
                        Đăng nhập
                    </Button>
                    <a style="margin-left:10px" href="">Chưa có tài khoản?</a>
                </FormItem>
            </Form>
            <Divider>or</Divider>
            <Row>
                <Col Span="24">
                    <Button Style="width: 100%" Type="@AntDesign.ButtonType.Primary">
                        <Icon Style="font-size:24px;" Type="facebook" Theme="outline"/> Đăng nhập bằng Facebook 
                    </Button>
                </Col>
                <Col Span="24" Style="margin-top: 10px">
                    <Button Style="width: 100%" Danger  Type="@AntDesign.ButtonType.Primary">
                        <Icon Style="font-size:24px;" Type="google" Theme="outline"/> Đăng nhập bằng Google
                    </Button>
                </Col>
            </Row>
        </Body>
    </Card>
</div>

@code {
    public UserDto model = new UserDto();

    protected override void OnInitialized()
    {
        var message = $"Initialized at {DateTime.Now}";
        Console.WriteLine(message);
    }

    private async Task OnFinish()
    {
        try
        {
            await _message.Loading("Đang đăng nhập....");
            var result = await _authService.Login(model);

            if(result.Code == Infrastructure.Enums.ApiResponseCode.Success)
            {
                await _message.Success("Đăng nhập thành công!", 2);
            }
            else
            {
                await _message.Error($"Lỗi đăng nhập: {result.Message}", 4);
            }

        }catch(Exception e)
        {
            await _message.Error($"Lỗi đăng nhập: {e.Message}", 2);
            Console.WriteLine(e.Message);
        }
    }
}
